version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "trade_events:1:1,trade_events_consumed:1:1,trade_events_errors:1:1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  mongodb:
    image: mongo:latest
    container_name: mongodb-realtime
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - kafka-network

  kafka-trade-consumer:
    build: ./kafka_trade_consumer
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_TOPIC: trade_events
      KAFKA_GROUP_ID: trade_consumer_group
      KAFKA_DLQ_TOPIC: trade_events_errors
      KAFKA_PROCESSED_TOPIC: trade_events_consumed
    depends_on:
      - kafka
    networks:
      - kafka-network

  event-processing-service:
    build: ./event_processing_service
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_TOPIC: trade_events_consumed
      KAFKA_GROUP_ID: event_processing_group
      MONGO_URI: mongodb://mongodb:27017/realtime
      MONGO_COLLECTION: trade_events
    depends_on:
      - kafka
      - mongodb
    networks:
      - kafka-network

  metrics-service:
    build: ./metrics_service
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MONGO_URI: mongodb://mongodb:27017/realtime
      MONGO_COLLECTION: trade_events
    depends_on:
      - kafka
      - mongodb
    networks:
      - kafka-network

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    command:
      - '--kafka.server=kafka:29092'
    ports:
      - "9308:9308"
    depends_on:
      - kafka
    networks:
      - kafka-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - kafka-exporter
    networks:
      - kafka-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  mongodb_data: